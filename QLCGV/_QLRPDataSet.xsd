<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="_QLRPDataSet" targetNamespace="http://tempuri.org/_QLRPDataSet.xsd" xmlns:mstns="http://tempuri.org/_QLRPDataSet.xsd" xmlns="http://tempuri.org/_QLRPDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="_QLRPConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="_QLRPConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.QLCGV.Properties.Settings.GlobalReference.Default._QLRPConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="PHONGTableAdapter" GeneratorDataComponentClassName="PHONGTableAdapter" Name="PHONG" UserDataComponentName="PHONGTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="_QLRPConnectionString (Settings)" DbObjectName="_QLRP.dbo.PHONG" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[PHONG] WHERE (([maPhong] = @Original_maPhong) AND ((@IsNull_tenPhong = 1 AND [tenPhong] IS NULL) OR ([tenPhong] = @Original_tenPhong)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_maPhong" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="maPhong" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tenPhong" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tenPhong" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_tenPhong" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="tenPhong" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[PHONG] ([maPhong], [tenPhong]) VALUES (@maPhong, @tenPhong);
SELECT maPhong, tenPhong FROM PHONG WHERE (maPhong = @maPhong)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@maPhong" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="maPhong" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@tenPhong" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="tenPhong" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT maPhong, tenPhong FROM dbo.PHONG</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[PHONG] SET [maPhong] = @maPhong, [tenPhong] = @tenPhong WHERE (([maPhong] = @Original_maPhong) AND ((@IsNull_tenPhong = 1 AND [tenPhong] IS NULL) OR ([tenPhong] = @Original_tenPhong)));
SELECT maPhong, tenPhong FROM PHONG WHERE (maPhong = @maPhong)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@maPhong" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="maPhong" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@tenPhong" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="tenPhong" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_maPhong" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="maPhong" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_tenPhong" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="tenPhong" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_tenPhong" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="tenPhong" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="maPhong" DataSetColumn="maPhong" />
              <Mapping SourceColumn="tenPhong" DataSetColumn="tenPhong" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="_QLRPDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="_QLRPDataSet" msprop:Generator_DataSetName="_QLRPDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="PHONG" msprop:Generator_RowEvHandlerName="PHONGRowChangeEventHandler" msprop:Generator_RowDeletedName="PHONGRowDeleted" msprop:Generator_RowDeletingName="PHONGRowDeleting" msprop:Generator_RowEvArgName="PHONGRowChangeEvent" msprop:Generator_TablePropName="PHONG" msprop:Generator_RowChangedName="PHONGRowChanged" msprop:Generator_RowChangingName="PHONGRowChanging" msprop:Generator_TableClassName="PHONGDataTable" msprop:Generator_RowClassName="PHONGRow" msprop:Generator_TableVarName="tablePHONG" msprop:Generator_UserTableName="PHONG">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="maPhong" msprop:Generator_ColumnPropNameInRow="maPhong" msprop:Generator_ColumnPropNameInTable="maPhongColumn" msprop:Generator_ColumnVarNameInTable="columnmaPhong" msprop:Generator_UserColumnName="maPhong" type="xs:int" />
              <xs:element name="tenPhong" msprop:Generator_ColumnPropNameInRow="tenPhong" msprop:Generator_ColumnPropNameInTable="tenPhongColumn" msprop:Generator_ColumnVarNameInTable="columntenPhong" msprop:Generator_UserColumnName="tenPhong" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:PHONG" />
      <xs:field xpath="mstns:maPhong" />
    </xs:unique>
  </xs:element>
</xs:schema>